# Starter pipeline    
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
 branches:
  include:
    - project-2
# TODO: Replace the agent pool name
pool: myAgentPool

variables:
  # TODO: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: '64c78da8-d0d3-450c-aa04-6c6269a24bef'

  #azureSubscription: '67bd0a2e-3527-452d-b5c9-168d529053f6'

  #azureTenantId: 'f958e84a-92b8-439f-a62d-4f45996b6d07'


  
  # TODO: Specify the value of the existing Web App name
  webAppName: 'project2app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'dwilson-project2'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3.7 -m venv ~/.project2
        source ~/.project2/bin/activate
        pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"
    - script: |
        python3.7 venv project2
        source project2/bin/activate
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName: 'Run lint tests'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop
      
- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: myAgentPool
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          # - script: python3.7 -m pip install --upgrade pip setuptools wheel
          #   displayName: 'Install Tools'

          # - task: UsePythonVersion@0
          #   inputs:
          #     versionSpec: '3.7.16'
          #     architecture: 'x64'
          #   displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : flask-ml-service-project2'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip